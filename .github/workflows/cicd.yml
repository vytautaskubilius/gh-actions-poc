name: cicd

on:
  push:
    branches:
      - "**"
  release:
    types:
      - "published"

jobs:
  # Determine which environment the action should be targeting
  identify-environment:
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.identify.outputs.environment }}
      base: ${{ steps.identify.outputs.base }}
    steps:
      - id: identify
        run: |
          if [[ $GITHUB_EVENT_NAME == 'release' ]]; then
              echo "::set-output name=environment::production"
              echo "::set-output name=base::$(git tag --sort "-committerdate" | sed -n 2p)"
          else
              echo "::set-output name=environment::staging"
              echo "::set-output name=base::main"
          fi

  changed:
    # Figure out if the change warrants a rebuild
    runs-on: ubuntu-latest
    needs: identify-environment
    outputs:
      delta: ${{ steps.changed.outputs.changes }}
    steps:
      - uses: actions/checkout@v2
      - uses: dorny/paths-filter@v2
        id: changed
        with:
          base: ${{ needs.identify-environment.outputs.base }}
          filters: |
            changed:
              - 'captcha-client/*.js'
              - 'captcha-client/*.json'
              - 'captcha-client/Dockerfile'
              - 'captcha-client/docker-compose.yaml'
              - 'captcha-client/src/**/*.ts'
              - 'captcha-client/src/**/*.scss'
              - 'captcha-client/**/*.html'
              - 'captcha-client-tests/*.json'
              - 'captcha-client-tests/**/*.js'

  build-and-test:
    # Business
    needs: [identify-environment, changed]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./app
    if: ${{ needs.changed.outputs.delta != '[]' }}

    steps:
      # Prepare code and install NPM packages
      - uses: actions/checkout@v2

      - uses: actions/upload-artifact@v2
        with:
          name: dist
          path: |
            ./app/app.txt

  publish-captcha-client:
    # Upload artifacts to S3
    runs-on: ubuntu-latest
    needs: [identify-environment, changed, build-and-test]
    environment: ${{ needs.identify-environment.outputs.environment }}
    if: (needs.identify-environment.outputs.environment == 'staging' && github.ref_name == 'main') || needs.identify-environment.outputs.environment == 'production'
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: dist

      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - run: |
          aws s3 cp app/app.txt s3://20220304-gh-actions-test/
        if: needs.identify-environment.outputs.environment == 'staging' && github.ref_name == 'main'
      - run: |
          aws s3 cp app/app.txt s3://20220304-gh-actions-test-production/
        if: needs.identify-environment.outputs.environment == 'production'
